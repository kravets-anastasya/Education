#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
int main() {
    ios_base::sync_with_stdio(0);
    int n, m;
    cin >> n >> m;
 vector<vector<int>> table(n + 1, vector<int>(m + 1));
 vector<vector<int>> dp(n + 1, vector<int>(m + 1));
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            cin >> table[i][j];
        }
    }
    dp[1][1] = table[1][1];
    for (int j = 2; j <= m; ++j) {
        dp[1][j] = dp[1][j - 1] + table[1][j];
    }
    for (int i = 2; i <= n; ++i) {
        dp[i][1] = dp[i - 1][1] + table[i][1];
    }
    for (int i = 2; i <= n; ++i) {
        for (int j = 2; j <= m; ++j) {
            dp[i][j] = table[i][j] + min({ dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1] });
        }
    }
    cout << dp[n][m] << endl;
    return 0;
}
